# 日志等级，可选值见 https://docs.python.org/zh-cn/3/howto/logging.html
log-level = "DEBUG"

# 输入配置
# 包含代理的配置文件，数组类型，可以是多个
# 可以是 clash/Clash.Meta/Stash 配置文件
[[provider]]
name = "主力机场"
type = "clash-meta" # 可选值 clash/clash-meta/stash
url = "https://gist.github.com/EkkoG/bd2d9e20aa5b456eb7180e72f9e5e588/raw?p=1"

[[provider]]
name = "自建节点"
type = "custom" # 自定义节点放到 custom 类型下
# 节点的合法字段见 https://github.com/EkkoG/subio/blob/main/src/subio/map.json
[[provider.nodes]]
type = 'http'
name = 'ekko-https-ahhh'
server = 'example.com'
port = 4443
tls = true
username = 'ekko'
password = 'ahh'

# 输出配置
# 会过滤掉当前类型不支持的节点，不支持有两种情况，一是节点类型不支持，二是节点缺少必要的字段或者字段值不合法
# 模板中可以使用当前目录下 snippet 文件夹中的模板定义，如 render(apple.main('DIRECT')) 模板见 https://github.com/EkkoG/subio/blob/main/example/snippet/apple
[[artifact]]
name = "ekko-meta.yaml"
type = "clash-meta" #可选值 clash/clash-meta/stash
template = "clash.yaml" # 位于当前目录下 template 文件夹中的模板文件的文件名
providers = ["自建节点", "主力机场"] # 从哪些 provider 中获取节点
[artifact.options]
# 自定义选项，可以在模板中使用
work = true

[[artifact]]
name = "ekko2.yaml"
type = "clash"
template = "clash.yaml"
providers = ["自建节点", "主力机场"]
[artifact.options]
work = true


# 远程 ruleset 定义，可以在模板中使用，如 render(remote_ruleset.telegram, "DIRECT")
[[ruleset]]
name = "telegram"
url = "https://github.com/DivineEngine/Profiles/raw/master/Surge/Ruleset/Extra/Telegram/Telegram.list"